# -----------------------------------------------------------------------------
# This file is part of the Macro Liquidity Toolkit.
#
# The Macro Liquidity Toolkit is free software: you can redistribute it and/or
# modify it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# The Macro Liquidity Toolkit is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with the Macro Liquidity Toolkit.  If not, 
# see <https://www.gnu.org/licenses/>.
# -----------------------------------------------------------------------------
# Copyright 2020, Mark D. Flood 
#
# Author: Mark D. Flood
# Last revision: 8-Aug-2019
# -----------------------------------------------------------------------------

# =============================================================================
# ====== Default configuration parameters, for all modules ====================
# =============================================================================
[DEFAULT]

# Location for the Python source files
pythondir=./py

# Location for the Python log files
logdir=./out/logs

# Number of CPU cores to use for parallelization. This number should not
# exceed the number of CPU cores on your machine (beyond that point, the
# extra "parallel" tasks queue up in serial fashion). 
# Set this value to zero (parallelcores=0) to skip parallelizing altogether.
# To learn the number of cores present on your own machine, issue in python:
#   import multiprocessing
#   multiprocessing.cpu_count()
# You may override parallelcores for specific tasks below (not recommended).
parallelcores=18

# Integer constants that define the logging thresholds
logNOTSET=0
logDEBUG=10
logINFO=20
logWARN=30
logERROR=40
logFATAL=50

# Whether to display progress bars in the console
#progressbars=True


# =============================================================================
# ========= Configuration parameters for nlg_features.py ======================
# =============================================================================
[pnl]

# The number of Monte Carlo runs of the NetLogo simulation
# If parallelcores (see above) is a positive number, then python will launch
# these runs in parallel. If parallelcores is zero (or negative) these runs
# will launch sequentially
NLruncount=1272

# Full path to the local directory for NetLogo script to run
#NLmodeldir=/home/mf/Projects/sloan/pb-mixin-plemmura/apphome/app/Vendor/simulations/5/nl/
NLmodeldir=./nl/

# Filename of the NetLogo script to run
NLfilename=LiquidityModel_MP_PNL_wBuyBroker_and_SellBroker_thin_out.nlogo

# At the moment, we are configuring logging from this file.
# At some point, we should set things up to use a separate logging.ini file.
# Modify this only when truly necessary, and if you know what you're doing
logdir=${DEFAULT:logdir}
logfilepfx=LM_
logfilesfx=log
loglevel=DEBUG
logformat=%(asctime)s::[%(levelname)s]::%(module)s::%(lineno)d â€” %(message)s

# Number of ticks to wait before flushing results to CSV output files
csvflushinterval=100

# Full path the NetLogo executable 
NLhomedir=./netlogo-5.3.1-64/

# The NetLogo major version number (5 or 6), needed by the pyNetLogo package
NLver=5


# Number of warmup simulation ticks to run, to burn in the system state
# Note that this matches a hard-coded theshold (5000) within the NetLogo 
# code, so changing it here will have unpredictable results. (It is sometimes 
# useful to set it to a small value here, to speed up simple tests.)
LMtickswarmups=5000

# Number of live simulation ticks to run, to generate usable output
LMtickssimruns=3600

# Some filename prefixes and suffixes
LMtraderctpfx=LMtradercts_
LMtraderctsfx=csv

LMallorderpfx=LMallorders_
LMallordersfx=csv

LMtransactpfx=LMtransactions_
LMtransactsfx=csv

LMorderbookpfx=LMorderbook_
LMorderbooksfx=csv

LMinventorypfx=LMinventory_
LMinventorysfx=csv

# -----------------------------------------------------------------------------
# Some simulation parameters

# Number of liquidity supplier (LiqSup) agents
nLiqSup=90

# Number of liquidity demander (LiqDem) agents
nLiqDem=90

# Number of market maker (MktMkr) agents
nMktMkr=5

# Total number of shares a buy broker (BkrBuy) should buy
BkrBuy_Limit=10

# Total number of shares a sell broker (BkrSel) should sell
BkrSel_Limit=10

# Rate at which brokers (BkrBuy and BkrSel) try to execute their trades
LiqBkr_OrderSizeMultiplier=10

# Tick count at which the brokers will stop executing
# Note that this interacts with the LMtickssimruns parameter 
#  -- If LMtickssimruns < PeriodtoEndExecution, then the latter has no effect
# Trade time is 5 seconds in length, there are 5000 burnin so 8600-5000 = 3600
# or 5 trading hours at one tick per every 5 seconds.
PeriodtoEndExecution=3600
